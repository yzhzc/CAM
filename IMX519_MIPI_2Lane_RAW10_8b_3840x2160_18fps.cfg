;**************************************************************************************/
; ----- camera parameter -----
; [camera parameter]	Camera parameter set for USB2.0 & USB3.0 mode
;
; -- Keyname description:
; CFG_MODE  = set the config mode for camera: 0 -> User define(UI)
;											  1 -> This config File
; TYPE      = set the name of the camera module
; SIZE		= set the width and height of the image generated by camera 
; BIT_WIDTH = set the bit width of the image generated by camera 
; FORMAT    = set the format of the image generated by camera:
;				| 0 -> RAW	  | 1 -> RGB565  | 2 -> YUV422   | 3 -> JPG  | 4 -> MONO  | 5 -> ST_RAW	| 6 -> ST_MONO |  
;				| -- 0 -> RG  | -- 0 -> RGB  | -- 0 -> YUYV  |           | 			  | -- 0 -> RG  | 			   |  
;				| -- 1 -> GR  | -- 1 -> BGR  | -- 1 -> YVYU  |           | 			  | -- 1 -> GR  | 			   |  
;				| -- 2 -> GB  |              | -- 2 -> UYVY  |           |			  | -- 2 -> GB  |			   |  
;				| -- 3 -> BG  |              | -- 3 -> VYUY  |           | 			  | -- 3 -> BG  | 			   |  
; I2C_MODE  = set the bit width of the address and data of I2C communication: 
;				0 ->  8 bit address &  8 bit value				
;				1 ->  8 bit address & 16 bit value
;				2 -> 16 bit address &  8 bit value
;				3 -> 16 bit address & 16 bit value		
; I2C_ADDR  = set the I2C address for register config of camera 
; G_GAIN    = set the address for green1_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; B_GAIN    = set the address for blue_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; R_GAIN    = set the address for red_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; G2_GAIN   = set the address for green2_gain register config of camera	( RAW & ST_RAW mode )
; Y_GAIN    = set the address for Y_gain register config of camera		( YUV422 mode )
; U_GAIN    = set the address for U_gain register config of camera		( YUV422 mode )
; V_GAIN    = set the address for V_gain register config of camera		( YUV422 mode )
; GL_GAIN   = set the address for global_gain register config of camera
; 
; -- Keyname format:
; CFG_MODE  = <value1>							;<comment>
; TYPE      = <value1>
; SIZE		= <width>, <height>
; BIT_WIDTH = <bitWidth>
; FORMAT    = <value1>[, <value2>]
; I2C_MODE  = <value1>
; I2C_ADDR  = <i2cAddress> 
; G_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; B_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; R_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; G2_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; Y_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; U_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; V_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; GL_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; 
; <valueN>		Index value representing certain meanings 
; <width>		Width of the image generated by camera
; <height>		Height of the image generated by camera
; <bitWidth>	Bit width of the image generated by camera
; <i2cAddress>	I2C address for register config of camera
; <page>        Optional address space for this register. Some sensors (mostly SOC's)
;               have multiple register pages (see the sensor spec or developers guide)
; <address>     The register address 
; <minValue>	Minimale value of certain address
; <maxValue>	Maximale value of certain address
; <comment>    	Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[camera parameter]
CFG_MODE  = 0	
TYPE      = IMX519
SIZE      = 3840, 2160
BIT_WIDTH = 8 
FORMAT    = 0, 3
I2C_MODE  = 2					
I2C_ADDR  = 0x34
;TRANS_LVL = 128

[control parameter]
MIN_VALUE   = 0
MAX_VALUE   = 1023
STEP        = 1
DEF 		= 210
CTRL_NAME	= Focus
FUNC_NAME	= setFocus
======CODE_BLOCK_START======
function setFocus(val)
    data = {0}
	val = math.floor(val)
	high = (val & 0x03FC) >> 2
	low = (val & 0x0003) << 6
	data[1] = high
	ret = SendVR(0xD7, 0x1800, 0x0000, 1, data)
	data[1] = low
	ret = SendVR(0xD7, 0x1800, 0x0100, 1, data)
end
======CODE_BLOCK_END======

[control parameter]
MIN_VALUE   = 2
MAX_VALUE   = 18
STEP        = 1
DEF 		= 18
CTRL_NAME	= Framerate
FUNC_NAME	= setFramerate
======CODE_BLOCK_START======
function setFramerate(val)
    local pix_clk_hz = 426666667
    -- line_length 0x0342 0x0343
    local hts = 10486
    local vts =  math.floor(pix_clk_hz/(hts*val))
    -- vts 0x0340 0x0341
	writeReg(0x0340, (vts & 0xFF00) >> 8)
    writeReg(0x0341, (vts & 0x00FF) >> 0)
end
======CODE_BLOCK_END======

[control parameter]
MIN_VALUE   = 4
MAX_VALUE   = 65535
STEP        = 1
DEF 		= 3304
CTRL_NAME	= Exposure
FUNC_NAME	= setExposure
======CODE_BLOCK_START======
function setExposure(val)
    -- vts 0x0202 0x0203
	writeReg(0x0202, (val & 0xFF00) >> 8)
    writeReg(0x0203, (val & 0x00FF) >> 0)
end
======CODE_BLOCK_END======

[control parameter]
MIN_VALUE   = 1
MAX_VALUE   = 47619
STEP        = 1
DEF 		= 47619
CTRL_NAME	= Exp(us)
FUNC_NAME	= setExposureTime
======CODE_BLOCK_START======
function setExposureTime(val)
    local hts = 10486
    local pix_clk_hz = 426666667
    local exp = math.floor(val*1000/(hts/pix_clk_hz*1e9))

	writeReg(0x0202, (exp & 0xFF00) >> 8)
    writeReg(0x0203, (exp & 0x00FF) >> 0)
end
======CODE_BLOCK_END======

[control parameter]
MIN_VALUE   = 100
MAX_VALUE   = 1600
STEP        = 100
DEF 		= 266
CTRL_NAME	= Gain(0.01x)
FUNC_NAME	= setAnalogueGain
======CODE_BLOCK_START======
function setAnalogueGain(val)
    -- vts 0x0204 0x0205
    local gain = math.floor(1024 - 1024 / (val / 100))

	writeReg(0x0204, (gain & 0xFF00) >> 8)
    writeReg(0x0205, (gain & 0x00FF) >> 0)
end
======CODE_BLOCK_END======
;//---------------------------------------------//
;[control parameter]
;MIN_VALUE   = 0
;MAX_VALUE   = 800
;STEP        = 8
;DEF 		= 0
;CTRL_NAME	= X
;FUNC_NAME	= setX
;======CODE_BLOCK_START======
;function setX(val)
;    -- X START 0X0344, 0X0345, Y:0X0348, 0X0349
;	writeReg(0x0344, (val & 0xFF00) >> 8)
;    writeReg(0x0345, (val & 0x00FF) >> 0)
;	writeReg(0x0348, ((val +3839) & 0xFF00) >> 8)
;    writeReg(0x0349, ((val +3839)& 0x00FF) >> 0)
;end
;======CODE_BLOCK_END======
;//---------------------------------------------//
;
;
;//---------------------------------------------//
;[control parameter]
;MIN_VALUE   = 0
;MAX_VALUE   = 1300
;STEP        = 8
;DEF 		= 0
;CTRL_NAME	= y
;FUNC_NAME	= sety
;======CODE_BLOCK_START======
;function sety(val)
;	-- Y START 0X0346, 0X0347, Y:0X034A, 0X034B
;	writeReg(0x0346, (val & 0xFF00) >> 8)
;    writeReg(0x0347, (val & 0x00FF) >> 0)
;	writeReg(0x034A, ((val +2159) & 0xFF00) >> 8)
;    writeReg(0x034B, ((val +2159)& 0x00FF) >> 0)
;end
;======CODE_BLOCK_END======
;//---------------------------------------------//


;**************************************************************************************/
; ----- board parameter -----
;
; -- Keyname description:
; VRCMD = set board parameter by vendor command 
; 
; -- Keyname format:
; VRCMD = <command>, <value>, <index>, <dataNumber>[, <data1>[, <data2>[, <data3>[, <data4>]]]] 		//<comment>
;
; <command>     
; <value>      
; <index>         
; <dataNumber>  
; <dataN>      
; <comment>    Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[board parameter]
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x05
VRCMD = 0xD7, 0x4600, 0x0200, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x12
VRCMD = 0xD7, 0x4600, 0x0A00, 1, 0x01
VRCMD = 0xD7, 0x4600, 0x0C00, 1, 0x91
VRCMD = 0xD7, 0x4600, 0x0D00, 1, 0x0F
VRCMD = 0xD7, 0x4600, 0x0E00, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0F00, 1, 0x08
VRCMD = 0xD7, 0x4600, 0x1000, 1, 0x70
VRCMD = 0xD7, 0x4600, 0x1100, 1, 0x03
VRCMD = 0xD7, 0x4600, 0x2300, 1, 0x01
VRCMD = 0xD7, 0x4600, 0x2800, 1, 0x03
VRCMD = 0xF6, 0x0000, 0x0000, 3, 0x03, 0x04, 0x0C

// Focus adjust
DELAY = 1
VRCMD = 0xD7, 0x1800, 0x0200, 1, 0x00
DELAY = 1
VRCMD = 0xD7, 0x1800, 0x0000, 1, 0x34
VRCMD = 0xD7, 0x1800, 0x0100, 1, 0x00



[board parameter][dev2]


[board parameter][dev3][inf2]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0004, 0x0000, 0

[board parameter][dev3][inf3]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0004, 0x0000, 0

;**************************************************************************************/
; ----- register parameter -----
;
; -- Keyname description:
; REG    = assign a new register value
; DELAY  = delay a certain amount of milliseconds before continuing
; BITSET = do a set operation to part of a register. The part is defined as a mask.
; BITCLR = do a reset operation to part of a register. The part is defined as a mask.
;
; -- Keyname format:
; REG    = [<page>,] <address>, <value>             //<comment>
; DELAY  = <milliseconds>
; BITSET = [<page>,] <address>, <mask>
; BITCLR = [<page>,] <address>, <mask>
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developers guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[register parameter]

//reset
REG = 0x0103 , 0x01
DELAY = 100

//stream off
REG = 0x0100, 0x00


//External Clock Setting		
REG = 0x0136,0x18
REG = 0x0137,0x00
		
		
//Register version		
REG = 0x3C7E,0x01
REG = 0x3C7F,0x07
		
		
//Global Setting		
REG = 0x3020,0x00
REG = 0x3E35,0x01
REG = 0x3F7F,0x01
REG = 0x5609,0x57
REG = 0x5613,0x51
REG = 0x561F,0x5E
REG = 0x5623,0xD2
REG = 0x5637,0x11
REG = 0x5657,0x11
REG = 0x5659,0x12
REG = 0x5733,0x60
REG = 0x5905,0x57
REG = 0x590F,0x51
REG = 0x591B,0x5E
REG = 0x591F,0xD2
REG = 0x5933,0x11
REG = 0x5953,0x11
REG = 0x5955,0x12
REG = 0x5A2F,0x60
REG = 0x5A85,0x57
REG = 0x5A8F,0x51
REG = 0x5A9B,0x5E
REG = 0x5A9F,0xD2
REG = 0x5AB3,0x11
REG = 0x5AD3,0x11
REG = 0x5AD5,0x12
REG = 0x5BAF,0x60
REG = 0x5C15,0x2A
REG = 0x5C17,0x80
REG = 0x5C19,0x31
REG = 0x5C1B,0x87
REG = 0x5C25,0x25
REG = 0x5C27,0x7B
REG = 0x5C29,0x2A
REG = 0x5C2B,0x80
REG = 0x5C2D,0x31
REG = 0x5C2F,0x87
REG = 0x5C35,0x2B
REG = 0x5C37,0x81
REG = 0x5C39,0x31
REG = 0x5C3B,0x87
REG = 0x5C45,0x25
REG = 0x5C47,0x7B
REG = 0x5C49,0x2A
REG = 0x5C4B,0x80
REG = 0x5C4D,0x31
REG = 0x5C4F,0x87
REG = 0x5C55,0x2D
REG = 0x5C57,0x83
REG = 0x5C59,0x32
REG = 0x5C5B,0x88
REG = 0x5C65,0x29
REG = 0x5C67,0x7F
REG = 0x5C69,0x2E
REG = 0x5C6B,0x84
REG = 0x5C6D,0x32
REG = 0x5C6F,0x88
REG = 0x5E69,0x04
REG = 0x5E9D,0x00
REG = 0x5F18,0x10
REG = 0x5F1A,0x0E
REG = 0x5F20,0x12
REG = 0x5F22,0x10
REG = 0x5F24,0x0E
REG = 0x5F28,0x10
REG = 0x5F2A,0x0E
REG = 0x5F30,0x12
REG = 0x5F32,0x10
REG = 0x5F34,0x0E
REG = 0x5F38,0x0F
REG = 0x5F39,0x0D
REG = 0x5F3C,0x11
REG = 0x5F3D,0x0F
REG = 0x5F3E,0x0D
REG = 0x5F61,0x07
REG = 0x5F64,0x05
REG = 0x5F67,0x03
REG = 0x5F6A,0x03
REG = 0x5F6D,0x07
REG = 0x5F70,0x07
REG = 0x5F73,0x05
REG = 0x5F76,0x02
REG = 0x5F79,0x07
REG = 0x5F7C,0x07
REG = 0x5F7F,0x07
REG = 0x5F82,0x07
REG = 0x5F85,0x03
REG = 0x5F88,0x02
REG = 0x5F8B,0x01
REG = 0x5F8E,0x01
REG = 0x5F91,0x04
REG = 0x5F94,0x05
REG = 0x5F97,0x02
REG = 0x5F9D,0x07
REG = 0x5FA0,0x07
REG = 0x5FA3,0x07
REG = 0x5FA6,0x07
REG = 0x5FA9,0x03
REG = 0x5FAC,0x01
REG = 0x5FAF,0x01
REG = 0x5FB5,0x03
REG = 0x5FB8,0x02
REG = 0x5FBB,0x01
REG = 0x5FC1,0x07
REG = 0x5FC4,0x07
REG = 0x5FC7,0x07
REG = 0x5FD1,0x00
REG = 0x6302,0x79
REG = 0x6305,0x78
REG = 0x6306,0xA5
REG = 0x6308,0x03
REG = 0x6309,0x20
REG = 0x630B,0x0A
REG = 0x630D,0x48
REG = 0x630F,0x06
REG = 0x6311,0xA4
REG = 0x6313,0x03
REG = 0x6314,0x20
REG = 0x6316,0x0A
REG = 0x6317,0x31
REG = 0x6318,0x4A
REG = 0x631A,0x06
REG = 0x631B,0x40
REG = 0x631C,0xA4
REG = 0x631E,0x03
REG = 0x631F,0x20
REG = 0x6321,0x0A
REG = 0x6323,0x4A
REG = 0x6328,0x80
REG = 0x6329,0x01
REG = 0x632A,0x30
REG = 0x632B,0x02
REG = 0x632C,0x20
REG = 0x632D,0x02
REG = 0x632E,0x30
REG = 0x6330,0x60
REG = 0x6332,0x90
REG = 0x6333,0x01
REG = 0x6334,0x30
REG = 0x6335,0x02
REG = 0x6336,0x20
REG = 0x6338,0x80
REG = 0x633A,0xA0
REG = 0x633B,0x01
REG = 0x633C,0x60
REG = 0x633D,0x02
REG = 0x633E,0x60
REG = 0x633F,0x01
REG = 0x6340,0x30
REG = 0x6341,0x02
REG = 0x6342,0x20
REG = 0x6343,0x03
REG = 0x6344,0x80
REG = 0x6345,0x03
REG = 0x6346,0x90
REG = 0x6348,0xF0
REG = 0x6349,0x01
REG = 0x634A,0x20
REG = 0x634B,0x02
REG = 0x634C,0x10
REG = 0x634D,0x03
REG = 0x634E,0x60
REG = 0x6350,0xA0
REG = 0x6351,0x01
REG = 0x6352,0x60
REG = 0x6353,0x02
REG = 0x6354,0x50
REG = 0x6355,0x02
REG = 0x6356,0x60
REG = 0x6357,0x01
REG = 0x6358,0x30
REG = 0x6359,0x02
REG = 0x635A,0x30
REG = 0x635B,0x03
REG = 0x635C,0x90
REG = 0x635F,0x01
REG = 0x6360,0x10
REG = 0x6361,0x01
REG = 0x6362,0x40
REG = 0x6363,0x02
REG = 0x6364,0x50
REG = 0x6368,0x70
REG = 0x636A,0xA0
REG = 0x636B,0x01
REG = 0x636C,0x50
REG = 0x637D,0xE4
REG = 0x637E,0xB4
REG = 0x638C,0x8E
REG = 0x638D,0x38
REG = 0x638E,0xE3
REG = 0x638F,0x4C
REG = 0x6390,0x30
REG = 0x6391,0xC3
REG = 0x6392,0xAE
REG = 0x6393,0xBA
REG = 0x6394,0xEB
REG = 0x6395,0x6E
REG = 0x6396,0x34
REG = 0x6397,0xE3
REG = 0x6398,0xCF
REG = 0x6399,0x3C
REG = 0x639A,0xF3
REG = 0x639B,0x0C
REG = 0x639C,0x30
REG = 0x639D,0xC1
REG = 0x63B9,0xA3
REG = 0x63BA,0xFE
REG = 0x7600,0x01
REG = 0x79A0,0x01
REG = 0x79A1,0x01
REG = 0x79A2,0x01
REG = 0x79A3,0x01
REG = 0x79A4,0x01
REG = 0x79A5,0x20
REG = 0x79A9,0x00
REG = 0x79AA,0x01
REG = 0x79AD,0x00
REG = 0x79AF,0x00
REG = 0x8173,0x01
REG = 0x835C,0x01
REG = 0x8A74,0x01
REG = 0x8C1F,0x00
REG = 0x8C27,0x00
REG = 0x8C3B,0x03
REG = 0x9004,0x0B
REG = 0x920C,0x6A
REG = 0x920D,0x22
REG = 0x920E,0x6A
REG = 0x920F,0x23
REG = 0x9214,0x6A
REG = 0x9215,0x20
REG = 0x9216,0x6A
REG = 0x9217,0x21
REG = 0x9385,0x3E
REG = 0x9387,0x1B
REG = 0x938D,0x4D
REG = 0x938F,0x43
REG = 0x9391,0x1B
REG = 0x9395,0x4D
REG = 0x9397,0x43
REG = 0x9399,0x1B
REG = 0x939D,0x3E
REG = 0x939F,0x2F
REG = 0x93A5,0x43
REG = 0x93A7,0x2F
REG = 0x93A9,0x2F
REG = 0x93AD,0x34
REG = 0x93AF,0x2F
REG = 0x93B5,0x3E
REG = 0x93B7,0x2F
REG = 0x93BD,0x4D
REG = 0x93BF,0x43
REG = 0x93C1,0x2F
REG = 0x93C5,0x4D
REG = 0x93C7,0x43
REG = 0x93C9,0x2F
REG = 0x974B,0x02
REG = 0x995C,0x8C
REG = 0x995D,0x00
REG = 0x995E,0x00
REG = 0x9963,0x64
REG = 0x9964,0x50
REG = 0xAA0A,0x26
REG = 0xAE03,0x04
REG = 0xAE04,0x03
REG = 0xAE05,0x03
REG = 0xBC1C,0x08

//15fps		
//H: 4656		
//V: 3496		
//MIPI output setting		
REG = 0x0111,0x02
REG = 0x0112,0x0A
REG = 0x0113,0x0A
REG = 0x0114,0x01 // 0x03 4lane 0x01 2lane

		
		
//Line Length PCK Setting		
REG = 0x0342,0x28
REG = 0x0343,0xF6

		
		
//Frame Length Lines Setting		
REG = 0x0340,0x08
REG = 0x0341,0xd4



//ROI Setting		
REG = 0x0344,0x01
REG = 0x0345,0x98
REG = 0x0346,0x02
REG = 0x0347,0xa0
REG = 0x0348,0x10
REG = 0x0349,0x97
REG = 0x034A,0x0b
REG = 0x034B,0x17

//REG = 0x0344,0x02
//REG = 0x0345,0x04
//REG = 0x0346,0x02
//REG = 0x0347,0x3F
//REG = 0x0348,0x11
//REG = 0x0349,0x03
//REG = 0x034A,0x0A
//REG = 0x034B,0xAE
		
//Mode Setting		
REG = 0x0220,0x00
REG = 0x0221,0x11
REG = 0x0222,0x01
REG = 0x0900,0x00
REG = 0x0901,0x11
REG = 0x0902,0x0A
REG = 0x3F4C,0x01
REG = 0x3F4D,0x01
REG = 0x4254,0x7F

//Digital Crop & Scaling		
REG = 0x0401,0x00
REG = 0x0404,0x00
REG = 0x0405,0x10
REG = 0x0408,0x00
REG = 0x0409,0x00
REG = 0x040A,0x00
REG = 0x040B,0x00
REG = 0x040C,0x0F
REG = 0x040D,0x00
REG = 0x040E,0x08
REG = 0x040F,0x70
		
		
//Output Size Setting		
REG = 0x034C,0x0F
REG = 0x034D,0x00
REG = 0x034E,0x08
REG = 0x034F,0x70
		
		
//Clock Setting		
REG = 0x0301,0x06
REG = 0x0303,0x04
REG = 0x0305,0x06    //04
REG = 0x0306,0x01
REG = 0x0307,0x40
REG = 0x0309,0x0A
REG = 0x030B,0x02
REG = 0x030D,0x04
REG = 0x030E,0x01
REG = 0x030F,0x10   //5E
REG = 0x0310,0x01
REG = 0x0820,0x0A
REG = 0x0821,0x20
REG = 0x0822,0x00
REG = 0x0823,0x00

//Clock Setting     
//REG = 0x0301,0x06
//REG = 0x0303,0x04
//REG = 0x0305,0x04
//REG = 0x0306,0x01
//REG = 0x0307,0xE0
//REG = 0x0309,0x0A
//REG = 0x030B,0x02
//REG = 0x030D,0x04
//REG = 0x030E,0x01
//REG = 0x030F,0x5E
//REG = 0x0310,0x01
//REG = 0x0820,0x0A
//REG = 0x0821,0x20
//REG = 0x0822,0x00
//REG = 0x0823,0x00
		
//PDAF Setting		
REG = 0x3E20,0x01
REG = 0x3E37,0x01   // 0:  Phase Difference Data is not output 1: Phase Difference Data is output
REG = 0x3E3B,0x00
REG = 0x38A4,0x00
REG = 0x38A5,0x00
REG = 0x38A6,0x00
REG = 0x38A7,0x00
REG = 0x38A8,0x00
REG = 0x38A9,0xf0
REG = 0x38AA,0x00
REG = 0x38AB,0xb4
		
//Other Setting		
REG = 0x0106,0x00
REG = 0x0B00,0x00
REG = 0x3230,0x00
REG = 0x3F14,0x01
REG = 0x3F3C,0x01
REG = 0x3F0D,0x0A
REG = 0x3FBC,0x00
REG = 0x3C06,0x00
REG = 0x3C07,0x48
REG = 0x3C0A,0x00
REG = 0x3C0B,0x00
REG = 0x3F78,0x00
REG = 0x3F79,0x40
REG = 0x3F7C,0x00
REG = 0x3F7D,0x00
		
//Integration Setting		
REG = 0x0202,0x0C   //coarse_integ_time[15:8]
REG = 0x0203,0xE8   //coarse_integ_time[7:0]
REG = 0x0224,0x01   //st_coarse_integ_time[15:8]
REG = 0x0225,0xF4   //st_coarse_integ_time[7:0]

//--------------------------//
//Gain Setting	
	
//analog gain settings
REG = 0x0204, 0x02	//ANA_GAIN_GLOBAL[9:8]
REG = 0x0205, 0x80	//ANA_GAIN_GLOBAL[7:0]
REG = 0x0216, 0x00
REG = 0x0217, 0x00
REG = 0x020E, 0x01
REG = 0x020F, 0x00
REG = 0x0218, 0x01
REG = 0x0219, 0x00

//Verital flip and horizontal mirror
//bit[1], Vertical 0:Normal 1:Reverse
//bit[0], Horizontal 0:Normal 1:Reverse

REG = 0x0101,0x00
REG = 0x0350,0x00 // FRM_LENGTH_CTRL
//--------------------------//
//--------------------------//
//stream on

REG = 0x0100,0x01
//--------------------------//


[register parameter][dev3][inf2]


[register parameter][dev3][inf3]

